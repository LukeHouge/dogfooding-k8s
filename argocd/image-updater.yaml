---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-image-updater
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-image-updater
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-image-updater
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-image-updater
    spec:
      serviceAccountName: argocd-image-updater
      containers:
      - name: argocd-image-updater
        image: argoprojlabs/argocd-image-updater:v0.12.2
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: APPLICATIONS_API
          value: "argocd"
        - name: ARGOCD_GRPC_WEB
          value: "true"
        - name: ARGOCD_SERVER
          value: "argocd-server.argocd.svc.cluster.local:443"
        - name: ARGOCD_INSECURE
          value: "true"
        - name: ARGOCD_PLAINTEXT
          value: "false"
        - name: ARGOCD_TOKEN
          valueFrom:
            secretKeyRef:
              name: argocd-image-updater-secret
              key: argocd.token
        - name: LOG_LEVEL
          value: "info"
        - name: KUBE_EVENTS
          value: "true"
        - name: GIT_COMMIT_USER
          value: "argocd-image-updater"
        - name: GIT_COMMIT_EMAIL
          value: "noreply@argoproj.io"
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        volumeMounts:
        - name: ssh-known-hosts
          mountPath: /app/config/ssh
        - name: ssh-config
          mountPath: /app/.ssh
      volumes:
      - name: ssh-known-hosts
        configMap:
          name: argocd-ssh-known-hosts-cm
      - name: ssh-config
        emptyDir: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-image-updater
  namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-image-updater
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["argoproj.io"]
  resources: ["applications"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-image-updater
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-image-updater
subjects:
- kind: ServiceAccount
  name: argocd-image-updater
  namespace: argocd
---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-image-updater-secret
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-image-updater-secret
    app.kubernetes.io/part-of: argocd-image-updater
stringData:
  # This will be populated by the init script
  argocd.token: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-image-updater-config
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-image-updater-config
    app.kubernetes.io/part-of: argocd-image-updater
data:
  log.level: "info"
  argocd.grpc_web: "true"
  argocd.server_addr: "argocd-server.argocd.svc.cluster.local:443"
  argocd.insecure: "true"
  argocd.plaintext: "false"
  interval: "30s"
  registries.conf: |
    registries:
    - name: GitHub Container Registry
      prefix: ghcr.io
      api_url: https://ghcr.io
      ping: true
      credentials: pullsecret:argocd/ghcr-secret